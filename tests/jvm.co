W JVM
W This is a test to replicate the class file format

W Classfile format ------------------------------------------------------------
Y 2 sections big endian I binary Y 0 I code Y 1 I constpool Y 2 ;

I compile W begin taping out header and sections to file 
Y binary magic! W set behaviour of grey numbers
M ca fe ba be W magic number
M 00 00 00 31 W major / minor version
Y #constants @ w16 W constant pool count
Y constpool section write 
M 00 01 W access flags bitmask
M 00 02 W this index class entry
M 00 04 W super index class entry
M 00 00 W interface count + empty table
M 00 00 W field count + empty table
M 00 01 W method count
M 00 09 W access flags
M 00 05 W name index
M 00 06 W descriptor index
M 00 01 W attributes count
M 00 07 W name index (Code)
Y code section ptr @ 12 + w32 W attribute length
M 00 0a W max stack
M 00 0a W max locals
Y code section ptr @ w32 W code length
Y code section write W the actual code
M 00 00 W exception table length
M 00 00 W attributes count 
M 00 00 W ?? Y ;


W Hello world Code ------------------------------------------------------------
W JVM Core
I call M a8 I jmp M a7 I getstatic M b2 I ldc M 12 I invokevirtual M b6
I astore_0 M 4b I ret M a9 I return M b1 I ; Y astore_0 ret M 00 Y ; I swap M 5f 

W Runtime Layer
I puts Y getstatic M 00 0d G swap Y invokevirtual M 00 13 Y ;

I str1 Y ldc M 15 Y ; I str2 Y ldc M 16 Y ;
I L1 M 00 06 I L2 M 00 06 I L3 M 00 1e Y ; W sneaky forward references

Y code magic! W grey numbers to section 1 
Y str1 puts
Y call L1
Y jmp L3 
R L1 Y str1 Y puts Y call L2 Y ; 
R L2 Y str1 Y puts ;
R L3 Y return


W Constant pool üèä -------------------------------------------------------------
I #constants Y constpool section "size" I cp@ Y #constants @ 
I #constants++ Y cp@ 1 + #constants ! ;
1 #constants !

I 1arg Y w16 #constants++ I 2args Y w16 w16 #constants++ ;

I str Y dup len M 01 Y 1arg cpy I strref M 08 Y 1arg I string Y str cp@ 1 - strref ;
I classref M 07 Y 1arg I fieldref M 09 Y 2args I methodref M 0a Y 2args I nametype M 0c Y 2args
I class W class Y str cp@ 1 - classref

I static-field W type class field Y str class str 
cp@ 1 - dup 3 - nametype
cp@ 1 - dup 2 - fieldref ;

I method W type class method Y str class str
cp@ 1 - dup 3 - nametype
cp@ 1 - dup 2 - methodref ;


Y constpool magic! W the constantpool M
W 01 Y "hello" class
W 03 Y "java/lang/Object" class
W 05 Y "main" str W method name
W 06 Y "([Ljava/lang/String;)V" str W method descriptor
W 07 Y "Code" str W attribute Y

"Ljava/io/PrintStream;" "java/lang/System" "out"  static-field
"(Ljava/lang/Object;)V" "java/io/PrintStream" "println" method

Y "call2" string
Y "Hello_World!" string

