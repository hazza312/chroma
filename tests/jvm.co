W JVM
W This is a test to replicate the class file format

W Classfile format ------------------------------------------------------------
Y 2 sections big endian I binary Y 0 I code Y 1 I constpool Y 2 ;

I compile W begin taping out header and sections to file 
Y binary magic! W set behaviour of grey numbers
M ca fe ba be W magic number
M 00 00 00 31 W major / minor version
Y #constants @ binary w16 W constant pool count
Y constpool write 
M 00 01 W access flags bitmask
M 00 02 W this index class entry
M 00 04 W super index class entry
M 00 00 W interface count + empty table
M 00 00 W field count + empty table
M 00 01 W method count
M 00 09 W access flags
M 00 05 W name index
M 00 06 W descriptor index
M 00 01 W attributes count
M 00 07 W name index (Code)
Y code ptr @ 12 + binary w32 W attribute length
M 00 0a W max stack
M 00 0a W max locals
Y code ptr @ binary w32 W code length
Y code write W the actual code
M 00 00 W exception table length
M 00 00 W attributes count 
M 00 00 W ?? Y ;



W Constant pool üèä -------------------------------------------------------------
I #constants Y constpool "size" I cp@ Y #constants @ 
I #constants++ Y cp@ 1 + #constants ! ;
1 #constants !

I cp Y constpool ptr I cp8 Y constpool w8 I cp16 Y constpool w16 ;
I 1arg Y cp16 #constants++ I 2args Y cp16 cp16 #constants++ ;
I cpstr Y 1 cp8 dup len 1arg constpool cpy I strref Y 08 cp8 Y 1arg 
I classref Y 07 cp8 1arg I fieldref Y 09 cp8 2args I methodref Y $0a cp8 2args 
I nametype Y $0c cp8 2args I class W class Y cpstr cp@ 1 - classref

I static-field W type class field Y cpstr class cpstr 
cp@ 1 - dup 3 - nametype
cp@ 1 - dup 2 - fieldref ;

I method W type class method Y cpstr class cpstr
cp@ 1 - dup 3 - nametype
cp@ 1 - dup 2 - methodref ;

Y constpool magic! W the constantpool
W boilerplate
Y "hello" class
Y "java/lang/Object" class
Y "main" cpstr W method name
Y "([Ljava/lang/String;)V" cpstr W method descriptor
Y "Code" cpstr W attribute Y

W "includes" Y
"Ljava/io/PrintStream;" "java/lang/System" "out"  static-field
"(Ljava/lang/Object;)V" "java/io/PrintStream" "println" method


W Hello world Code ------------------------------------------------------------

W JVM Core
Y code magic! W grey numbers to section 1 
I ip Y code ptr I ip@ Y ip @ I ip! Y code ptr ! ; I i8 Y code w8 I i16 Y code w16 

I getstatic M b2 I ldc M 12 I invokevirtual M b6 I astore_0 M 4b I ret M a9 I return M b1 I swap M 5f 

I jmp Y ip@ - M a7 Y i16 I call Y ip@ - M a8 Y i16 I ; Y astore_0 ret M 00 Y ;
I str Y cpstr cp@ 1 - strref #constants @ 1 - ldc i8 ;
I lit M 10 Y i8 ;
I if M 99 Y ip@ M 00 00 Y ; I -if M 9a Y ip@ M 00 00 Y ;
I then Y dup ip@ swap - 1 + swap i16! ;
I for Y ; I next Y ;

W we want to do something like
iconst_0
istore_1
L:

<body>
iinc 1 1
iload_1 #todo, nesting
bipush i8 #limit, todo if needs to be in constpool
if_icmplt L



W Runtime Layer
I puts Y getstatic M 00 0d G swap Y invokevirtual M 00 13 Y ;

W actual user code
R main G 1 Y if G "hey" Y puts Y then G "there" Y puts return
