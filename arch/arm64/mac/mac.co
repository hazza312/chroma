Y 2 sections 
Y "out" ext
Y 0 magic!
Y little endian

I b64 Y 0 w64 ;
I b32 Y 0 w32 ;
I compile 
M
W see mach-o/loader.h
W mach header
M cf fa ed fe W magic
M 0c 00 00 01 W cputype: 0c (CPU_TYPE_ARM64) | 0x01000000 (CPU_ARCH_ABI64)
M 00 00 00 00 W cpusubtype
M 02 00 00 00 W filetype: MH_EXECUTE = demand paged executable file
M 10 00 00 00 W ncmds, number of load commands
M e8 02 00 00 W size of all load commands
M 85 00 20 00 W flags MH_NOUNDEFS (0x1) | MH_DYLDLINK (0x4) | MH_TWOLEVEL (0x80) | MH_PIE (0x200000)
M 00 00 00 00 W reserved

W load command #1
Y $19 b32 W cmd 0x19 = LC_SEGMENT_64, 64-bit segment of this file to be mapped 
Y $48 b32 W cmdsize (bytes) 
M 5f 5f 50 41 47 45 5a 45 52 4f 00 00 00 00 00 00 W segment name "__PAGEZERO"
Y 0 b64 W vmaddr, memory address of segment
Y $100000000 b64 W vmsize, size of segment
Y 0 b64 W fileoffset 
Y 0 b64 W filesize, amount to map from file
Y 0 b32 W maxprot
Y 0 b32 W initprot
Y 0 b32 W nsects, number sections in segment
Y 0 b32 W flags

W load command #2
Y $19 b32 W LC_SEGMENT_64
Y $e8 b32 W cmdsize
M 5f 5f 54 45 58 54 00 00 00 00 00 00 00 00 00 00 W "__TEXT"
Y $100000000 b64 W vmaddr
Y $4000 b64 W vmsize
Y 0 b64 W fileoffset
Y $4000 b64 W filesize, amount to map from file
M 5 0 0 0 W maxprot read | execute
M 5 0 0 0 W initprot read | execute
Y 2 b32 W nsects
Y 0 b32 W flags

W section #1
M 5f 5f 74 65 78 74 00 00 00 00 00 00 00 00 00 00 W sect name "__text"
M 5f 5f 54 45 58 54 00 00 00 00 00 00 00 00 00 00 W segname "__TEXT"
Y $100003f88 b64 W addr, memory address of section
Y $2d b64 W size in bytes of section
Y $3f88 b32 W file offset
Y 2 b32 W align, power of 2
Y 0 b32 W file offset of relocation entries
Y 0 b32 W number of relocation entries
Y $80000400 b32 W flags 
Y 0 b32 W reserved
Y 0 b32 W reserved
Y 0 b32 W reserved

W section #2 (needed?)
M 5f 5f 75 6e 77 69 6e 64 5f 69 6e 66 6f 00 00 00 W sect name "__unwind_info"
M 5f 5f 54 45 58 54 00 00 00 00 00 00 00 00 00 00 W segname "__TEXT"
Y $100003fb8 b64 W addr
Y $48 b64 W size of section
Y $3fb8 b32 W file offset
Y 2 b32 W align, power of 2
Y 0 b32 W file offset of relocation entries
Y 0 b32 W number of relocation entries
Y 0 b32 W flags 
Y 0 b32 W reserved
Y 0 b32 W reserved
Y 0 b32 W reserved

W load command #3
Y $19 b32 W LC_SEGMENT_64
M 48 0 0 0 
5f 5f 4c 49 4e 4b 45 44 49 54 00 00 00 00 00 00 W "__LINKEDIT" 
Y $100004000 b64 W vmaddr 
Y $4000 b64 W vmsize 
Y $4000 b64 W fileoffset 
Y $1e7 b64 W filesize
Y 1 b32 W maxprot 
Y 1 b32 W initprot 
Y 0 b32 W nsects 
Y 0 b32 W flags

W load command #4
Y $80000034 b32 W LC_DYLD_CHAINED_FIXUPS see loader.h
Y $10 b32 W cmdsize
Y $4000 b32 W dataoffset
Y $38 b32 W datasize

W load command #5
Y $80000033 b32 W LC_DYLD_EXPORTS_TRIE 
Y $10 b32 W cmdsize
Y $4038 b32 W dataoffset
Y $30 b32 W datasize 

W load command #6
Y 2 b32 W LC_SYMTAB
Y $18 b32 W cmdsize
Y $4070 b32 W symoff 
Y 3 b32 W nsyms
Y $40a0 b32 W stroff
Y $28 b32 W strsize 

W load command #7
Y $b b32 W LC_DYSYMTAB
Y $50 b32 W cmdsize 
Y 0 b32 W idx local syms
Y 1 b32 W local syms 
Y 1 b32 W idx ext def syms 
Y 2 b32 W num ext def s 
Y 3 b32 W idx undefined symbols
Y 0 b32 W num undefined
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...
Y 0 b32 W ...

W load command #8 
Y $e b32 W LC_LOAD_DYLINKER
Y $20 b32 W cmdsize 
Y $c b32 W strlen 
M 2f 75 73 72 2f 6c 69 62 2f 64 79 6c 64 0 0 0 0 0 0 0  W "/usr/lib/dyld" + pad

W load command #9
Y $1b b32 W cmd LC_UUID
Y $18 b32 W cmdsize 
M cf 65 ce 90 f8 3f 30 e2 ae 22 e9 db c4 2 ab f4 W uuid 

W load command #10
Y $32 b32 W LC_BUILD_VERSION
Y $20 b32 W cmdsize 
Y 1 b32 W platform 
Y $c0000 b32 W min iOS
Y $a1100 b32 W sdk
Y 1 b32 W ntools 
W tool#1
Y 3 b32 W tool TOOL_LD
Y $3330600 b32 W version
M
2a 0 0 0 10 0 0 0 
0 0 0 0 0 0 0 0 
28 0 0 80 18 0 0 0 
88 3f 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
c 0 0 0 38 0 0 0 
18 0 0 0 2 0 0 0 
3 64 1f 5 0 0 1 0 
2f 75 73 72 2f 6c 69 62 
2f 6c 69 62 53 79 73 74 
65 6d 2e 42 2e 64 79 6c 
69 62 0 0 0 0 0 0 
26 0 0 0 10 0 0 0 
68 40 0 0 8 0 0 0 
29 0 0 0 10 0 0 0 
70 40 0 0 0 0 0 0 
1d 0 0 0 10 0 0 0 
d0 40 0 0 17 1 0 0 
Y $3c80 padding

W _start 100003f88
M 20 0 80 d2 W mov	x0, #1 
M e1 0 0 10 W adr	x1, #28
M a2 1 80 d2 W mov	x2, #13
M 90 0 80 d2 W mov	x16, #4
M 1 10 0 d4 W svc	#0x80
M 0 0 80 d2 W mov	x0, #0
M 30 0 80 d2 W mov	x16, #1
M 1 10 0 d4 W svc	#0x80

W ?? M
48 65 6c 6c 6f 20 57 6f 
72 6c 64 21 a 0 0 0 

W __unwind_info 100003fb8
M
1 0 0 0 1c 0 0 0 
0 0 0 0 1c 0 0 0 
0 0 0 0 1c 0 0 0 
2 0 0 0 88 3f 0 0 
34 0 0 0 34 0 0 0 
b6 3f 0 0 0 0 0 0 
34 0 0 0 3 0 0 0 
c 0 1 0 10 0 1 0 
0 0 0 0 0 0 0 0 
0 0 0 0 20 0 0 0 
30 0 0 0 30 0 0 0 
0 0 0 0 1 0 0 0 
0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 1 5f 0 9 2 0 0 
0 0 2 5f 6d 68 5f 65 
78 65 63 75 74 65 5f 68 
65 61 64 65 72 0 5 73 
74 61 72 74 0 26 3 0 
88 7f 0 0 0 0 0 0 
88 7f 20 0 0 0 0 0 
1d 0 0 0 e 1 0 0 
a8 3f 0 0 1 0 0 0 
2 0 0 0 f 1 10 0 
0 0 0 0 1 0 0 0 
16 0 0 0 f 1 0 0 
88 3f 0 0 1 0 0 0 
20 0 5f 5f 6d 68 5f 65 
78 65 63 75 74 65 5f 68 
65 61 64 65 72 0 5f 73 
74 61 72 74 0 68 65 6c 
6c 6f 77 6f 72 6c 64 0 
0 0 0 0 0 0 0 0 
fa de c c0 0 0 1 17 
0 0 0 1 0 0 0 0 
0 0 0 14 fa de c 2 
0 0 1 3 0 2 4 0 
0 2 0 2 0 0 0 63 
0 0 0 58 0 0 0 0 
0 0 0 5 0 0 40 d0 
20 2 0 c 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 
0 0 40 0 0 0 0 0 
0 0 0 1 48 65 6c 6c 
6f 57 6f 72 6c 64 0 64 
77 49 12 17 4e df 32 7d 
89 e7 c1 f1 28 c5 39 6a 
a7 c6 85 cc 43 19 6e ac 
6c 28 6c 30 97 63 2c ad 
7f ac b2 58 6f c6 e9 66 
c0 4 d7 d1 d1 6b 2 4f 
58 5 ff 7c b4 7c 7a 85 
da bd 8b 48 89 2c a7 ad 
7f ac b2 58 6f c6 e9 66 
c0 4 d7 d1 d1 6b 2 4f 
58 5 ff 7c b4 7c 7a 85 
da bd 8b 48 89 2c a7 ce 
d1 11 1d 63 20 1f eb d1 
8c 49 8e 3f d3 e0 9e 4f 
2d 61 df 6 b1 53 83 9a 
a1 5c 94 c8 7 f2 db 25 
7d 65 2c ef 4f 9a d3 b1 
27 5c c 1d ed a5 b5 4 
ce 71 3b 9c a 9b 65 fa 
a5 23 85 37 27 c0 aa 

Y ;